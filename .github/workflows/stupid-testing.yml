name: testing

on:
  workflow_dispatch:

env:
  TZ: Asia/Shanghai

jobs:
  build:
    name: Build KernelSU Next by ${{ github.actor }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set swap to 10G
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 10
    
    - name: Setup build kernel environment
      run: |
        echo "BUILD_TIME=$(TZ=Asia/Shanghai date "+%y%m%d")" >> $GITHUB_ENV
        echo "BUILD_TIME_1=$(TZ=Asia/Shanghai date "+%Y-%m-%d")" >> $GITHUB_ENV
        sudo apt-get update
        sudo apt-get install git ccache automake flex lzop bison gperf build-essential zip curl zlib1g-dev g++-multilib bzip2 libbz2-dev liblz4-tool make squashfs-tools dpkg-dev libssl-dev python3 bc libc6-dev-i386 libncurses5-dev
        mkdir -p $GITHUB_WORKSPACE/kernel_workspace
    
    - name: Download Clang-aosp
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        mkdir clang-aosp
        wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/main/clang-r522817.tar.gz
        tar -C clang-aosp/ -zxvf clang-r522817.tar.gz
    
    - name: Download Gcc-aosp
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        mkdir gcc-64
        wget -O gcc-aarch64.tar.gz https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/+archive/refs/tags/android-12.1.0_r27.tar.gz
        tar -C gcc-64/ -zxvf gcc-aarch64.tar.gz
    
    - name: Download kernel source
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        git clone --recursive https://github.com/Nameless-AOSP-OSS/kernel_oneplus_sm8250 -b fifteen android-kernel --depth=1
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel/scripts
        sed -i 's/ -dirty//g' setlocalversion
        cd $GITHUB_WORKSPACE/patches
        sed -i '1655 r path_umount.c' $GITHUB_WORKSPACE/kernel_workspace/android-kernel/fs/namespace.c

    - name: Download SUSFS
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        git clone https://gitlab.com/simonpunk/susfs4ksu.git -b 1.4.2-kernel-4.19 susfs

    - name: Setup KernelSU Next
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
        curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -
        KSU_VERSION_1=$(cd KernelSU-Next && expr $(/usr/bin/git rev-list --count HEAD) + 10200)
        echo "KSUVER_1=$KSU_VERSION_1" >> $GITHUB_ENV

    - name: Apply SUSFS
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/susfs
        cp ./kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch $GITHUB_WORKSPACE/kernel_workspace/android-kernel/KernelSU-Next/
        cp ./kernel_patches/KernelSU/kernel/sucompat.h $GITHUB_WORKSPACE/kernel_workspace/android-kernel/KernelSU-Next/kernel/
        cp ./kernel_patches/50_add_susfs_in_kernel-4.19.patch $GITHUB_WORKSPACE/kernel_workspace/android-kernel/
        cp ./kernel_patches/fs/susfs.c $GITHUB_WORKSPACE/kernel_workspace/android-kernel/fs/
        cp ./kernel_patches/include/linux/susfs.h $GITHUB_WORKSPACE/kernel_workspace/android-kernel/include/linux/
        cp ./kernel_patches/fs/sus_su.c $GITHUB_WORKSPACE/kernel_workspace/android-kernel/fs/
        cp ./kernel_patches/include/linux/sus_su.h $GITHUB_WORKSPACE/kernel_workspace/android-kernel/include/linux/
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel/KernelSU-Next
        patch -p1 < 10_enable_susfs_for_ksu.patch
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel/
        patch -p1 < 50_add_susfs_in_kernel-4.19.patch
        # Make sure again to have CONFIG_KSU and CONFIG_KSU_SUSFS enabled before building the kernel
        sed -i 's/# CONFIG_KSU is not set/CONFIG_KSU=y/g' arch/arm64/configs/vendor/kona-perf_defconfig
        sed -i 's/# CONFIG_KSU_SUSFS is not set/CONFIG_KSU_SUSFS=y/g' arch/arm64/configs/vendor/kona-perf_defconfig
        
    - name: Build kernel with KernelSU Next
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
        rm -rf out/arch/arm64/boot/Image
        export ARCH=arm64
        export SUBARCH=arm64
        export BRAND_SHOW_FLAG=oneplus
        export PATH=$GITHUB_WORKSPACE/kernel_workspace/clang-aosp/bin:$GITHUB_WORKSPACE/kernel_workspace/gcc-64/bin:$PATH
        export KBUILD_BUILD_HOST=Github-Action
        export KBUILD_BUILD_USER=$(echo ${{ github.actor }} | tr A-Z a-z)
        BA_CMD="CLANG_TRIPLE=aarch64-linux-gnu- CROSS_COMPILE=aarch64-linux-android-"
        EX_CMD="LD=ld.lld LLVM=1 LLVM_IAS=1"
        DEFCONFIG="vendor/kona-perf_defconfig vendor/debugfs.config"
        make O=out ARCH=arm64 CC=clang $BA_CMD $EX_CMD $DEFCONFIG
        make -j$(nproc --all) O=out ARCH=arm64 CC=clang $BA_CMD $EX_CMD

    - name: Check a kernel output files with KernelSU Next
      run: |
       cd $GITHUB_WORKSPACE/kernel_workspace
       if [ -f android-kernel/out/arch/arm64/boot/Image ]; then
           echo "CHECK_IMAGE_1=true" >> $GITHUB_ENV
       else
           echo "Kernel output file is empty"
           exit 1
       fi

    - name: Make AnyKernel3 with KernelSU Next
      if: env.CHECK_IMAGE_1 == 'true'
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        git clone https://github.com/osm0sis/AnyKernel3 --depth=1 AnyKernel3
        sed -i 's/do.devicecheck=1/do.devicecheck=0/g' AnyKernel3/anykernel.sh
        sed -i 's!BLOCK=/dev/block/platform/omap/omap_hsmmc.0/by-name/boot;!BLOCK=auto;!g' AnyKernel3/anykernel.sh
        sed -i 's/IS_SLOT_DEVICE=0;/IS_SLOT_DEVICE=auto;/g' AnyKernel3/anykernel.sh
        cp android-kernel/out/arch/arm64/boot/Image AnyKernel3/
        rm -rf AnyKernel3/.git* AnyKernel3/README.md

    - name: Compress AnyKernel3 with KernelSU Next folder to zip
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/AnyKernel3
        zip -r $GITHUB_WORKSPACE/AK3-Nameless-OPlus-SM8250-KSU-Next_${{ env.KSUVER_1 }}-${{ env.BUILD_TIME }}.zip ./*

    - name: Upload Image
      if: env.CHECK_IMAGE_1 == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: Image-KSU-Next_${{ env.KSUVER_1 }}
        path: kernel_workspace/android-kernel/out/arch/arm64/boot/Image

    - name: Upload AnyKernel3
      if: env.CHECK_IMAGE_1 == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: AK3-Nameless-OPlus-SM8250-KSU-Next_${{ env.KSUVER_1 }}-${{ env.BUILD_TIME }}
        path: kernel_workspace/AnyKernel3/*
