name: Build LineageOS OPlus SM8250 Kernel with KernelSU Next and SUSFS

on:
  workflow_dispatch:

env:
  TZ: Asia/Shanghai

jobs:
  build:
    name: Build Kernel by ${{ github.actor }}
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - uses: actions/checkout@v4
    
    # Set swap space
    - name: Set swap to 10G
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 10
    
    # Setup the build environment
    - name: Setup build kernel environment
      run: |
        echo "BUILD_TIME=$(TZ=Asia/Shanghai date "+%y%m%d")" >> $GITHUB_ENV
        echo "BUILD_TIME_1=$(TZ=Asia/Shanghai date "+%Y-%m-%d")" >> $GITHUB_ENV
        sudo apt-get update
        sudo apt-get install git ccache automake flex lzop bison gperf build-essential zip curl zlib1g-dev g++-multilib bzip2 libbz2-dev liblz4-tool make squashfs-tools dpkg-dev libssl-dev python3 bc libc6-dev-i386 libncurses5-dev
        mkdir -p $GITHUB_WORKSPACE/kernel_workspace
    
    # Download Clang for AOSP
    - name: Download Clang-aosp
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        mkdir clang-aosp
        wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/main-kernel-build-2023/clang-r487747c.tar.gz
        tar -C clang-aosp/ -zxvf clang-r487747c.tar.gz
    
    # Download GCC for AOSP
    - name: Download Gcc-aosp
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        mkdir gcc-64
        wget -O gcc-aarch64.tar.gz https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/+archive/refs/tags/android-12.1.0_r27.tar.gz
        tar -C gcc-64/ -zxvf gcc-aarch64.tar.gz
    
    # Download the kernel source
    - name: Download kernel source
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        git clone --recursive https://github.com/LineageOS/android_kernel_oneplus_sm8250 -b lineage-22.1 android-kernel --depth=1
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel/scripts
        sed -i 's/ -dirty//g' setlocalversion
        cd $GITHUB_WORKSPACE/patches
        sed -i '1655 r path_umount.c' $GITHUB_WORKSPACE/kernel_workspace/android-kernel/fs/namespace.c

    # Setup KernelSU Next
    - name: Setup KernelSU Next
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
        curl -LSs "https://raw.githubusercontent.com/KernelSU-Next/KernelSU-Next/next-susfs/kernel/setup.sh" | bash -s next-susfs
        KSU_VERSION=$(cd KernelSU-Next && expr $(/usr/bin/git rev-list --count HEAD) + 10200)
        echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV

    # Setup SUSFS
    - name: Setup SUSFS
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        git clone https://gitlab.com/simonpunk/susfs4ksu -b kernel-4.19
        cp susfs4ksu/kernel_patches/50_add_susfs_in_kernel-4.19.patch android-kernel/
        cp susfs4ksu/kernel_patches/fs/* android-kernel/fs/
        cp susfs4ksu/kernel_patches/include/linux/* android-kernel/include/linux/
        cd android-kernel
        patch -p1 < 50_add_susfs_in_kernel-4.19.patch || true

    # Add SUSFS defconfig options
    - name: Add SUSFS defconfig options
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
        echo "CONFIG_KSU=y" >> arch/arm64/configs/vendor/kona-perf_defconfig
        echo "CONFIG_KSU_SUSFS=y" >> arch/arm64/configs/vendor/kona-perf_defconfig
        echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> arch/arm64/configs/vendor/kona-perf_defconfig
        echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> arch/arm64/configs/vendor/kona-perf_defconfig
        echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> arch/arm64/configs/vendor/kona-perf_defconfig
        echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> arch/arm64/configs/vendor/kona-perf_defconfig
        echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> arch/arm64/configs/vendor/kona-perf_defconfig
        echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> arch/arm64/configs/vendor/kona-perf_defconfig
        echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> arch/arm64/configs/vendor/kona-perf_defconfig
        echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> arch/arm64/configs/vendor/kona-perf_defconfig
        echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> arch/arm64/configs/vendor/kona-perf_defconfig
        echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> arch/arm64/configs/vendor/kona-perf_defconfig
        echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> arch/arm64/configs/vendor/kona-perf_defconfig
        echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> arch/arm64/configs/vendor/kona-perf_defconfig
        echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> arch/arm64/configs/vendor/kona-perf_defconfig
        echo "CONFIG_TMPFS_XATTR=y" >> arch/arm64/configs/vendor/kona-perf_defconfig
        echo "CONFIG_TMPFS_POSIX_ACL=y" >> arch/arm64/configs/vendor/kona-perf_defconfig
        echo "CONFIG_IP_NF_TARGET_TTL=y" >> arch/arm64/configs/vendor/kona-perf_defconfig
        echo "CONFIG_IP6_NF_TARGET_HL=y" >> arch/arm64/configs/vendor/kona-perf_defconfig
        echo "CONFIG_IP6_NF_MATCH_HL=y" >> arch/arm64/configs/vendor/kona-perf_defconfig

    # Build the kernel
    - name: Build kernel
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
        rm -rf out/arch/arm64/boot/Image
        export ARCH=arm64
        export SUBARCH=arm64
        export BRAND_SHOW_FLAG=oneplus
        export PATH=$GITHUB_WORKSPACE/kernel_workspace/clang-aosp/bin:$GITHUB_WORKSPACE/kernel_workspace/gcc-64/bin:$PATH
        export KBUILD_BUILD_HOST=Github-Action
        export KBUILD_BUILD_USER=$(echo ${{ github.actor }} | tr A-Z a-z)
        BA_CMD="CLANG_TRIPLE=aarch64-linux-gnu- CROSS_COMPILE=aarch64-linux-android-"
        EX_CMD="LD=ld.lld LLVM=1 LLVM_IAS=1"
        DEFCONFIG="vendor/kona-perf_defconfig vendor/debugfs.config"
        make O=out ARCH=arm64 CC=clang $BA_CMD $EX_CMD $DEFCONFIG
        make -j$(nproc --all) O=out ARCH=arm64 CC=clang $BA_CMD $EX_CMD

    # Check if kernel output files exist
    - name: Check a kernel output files with Kernel
      run: |
       cd $GITHUB_WORKSPACE/kernel_workspace
       if [ -f android-kernel/out/arch/arm64/boot/Image ]; then
           echo "CHECK_IMAGE=true" >> $GITHUB_ENV
       else
           echo "Kernel output file is empty"
           exit 1
       fi

    # Make AnyKernel3 zip
    - name: Make AnyKernel3 zip
      if: env.CHECK_IMAGE == 'true'
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        rm -rf AnyKernel3/Image
        cp android-kernel/out/arch/arm64/boot/Image AnyKernel3/

    # Upload Image
    - name: Upload Image
      if: env.CHECK_IMAGE == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: Image-LOS22-OPlus-SM8250-KSUN-SUSFS_${{ env.KSUVER }}
        path: kernel_workspace/android-kernel/out/arch/arm64/boot/Image

    # Upload AnyKernel3 zip
    - name: Upload AnyKernel3 zip
      if: env.CHECK_IMAGE == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: AK3-LOS22-OPlus-SM8250-KSUN-SUSFS_${{ env.KSUVER }}-${{ env.BUILD_TIME }}
        path: kernel_workspace/AnyKernel3/*
